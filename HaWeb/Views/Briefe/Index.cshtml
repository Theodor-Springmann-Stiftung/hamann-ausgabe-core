@model BriefeViewModel;

<div class="ha-letterheader">
    @await Html.PartialAsync("/Views/Shared/_LetterHead.cshtml", Model.MetaData)
    <div class="ha-letterheadernav">
        <div class="ha-lettertabs">
            <a class="active" id="ha-lettertextbtn">Brieftext</a>
            <a class="" id="ha-additionsbtn">Überlieferung & Textkritik</a>
            <a class="">PDF</a>
        </div>
    
        @if (Model.MetaData.Next != null || Model.MetaData.Prev != null) {
            <div class="ha-lettermetalinks">
                @if (Model.MetaData.Prev != null) {
                    <a href="@Model.MetaData.Prev.Value.Item2">
                        @Model.MetaData.Prev.Value.Item1.Meta.Autopsic ◀
                    </a>
                }

                <div class="ha-hkb">
                    HKB
                </div>

                @if (Model.MetaData.Next != null) {
                    <a href="@Model.MetaData.Next.Value.Item2">
                        ▶ @Model.MetaData.Next.Value.Item1.Meta.Autopsic
                    </a>
                }
            </div>
        }
    </div>
</div>

<div class="ha-letterbody">
    <div class="ha-lettertext" id="ha-lettertext">
        @if (Model.ParsedText != null) {
            @Html.Raw(@Model.ParsedText)
        }
    </div>
    <div class="ha-additions" id="ha-additions">
        @if (Model.ParsedTradition != null) {
            @Html.Raw(Model.ParsedTradition)
        }
        @if(Model.ParsedHands != null && Model.ParsedHands.Any()) {
            <div class="ha-hands">
                <div class="ha-handstitle">Zusätze fremder Hand</div>
                <div class="ha-handentries">
                    <table>
                    @foreach (var hand in Model.ParsedHands) {
                        <tr class="ha-handentry">
                            @* Not beautiful, but here's whitespace in between otherwise *@
                            <td><div class="ha-handfrom">@hand.Item1</div>@if (!String.IsNullOrEmpty(hand.Item2)) {<div class="ha-handto">–@hand.Item2</div>
                            }</td>
                            <td class="ha-handperson">@hand.Item3</td>
                        </tr>
                    }
                    </table>
                </div>
            </div>
        }

        @if (Model.ParsedEdits != null) {
            <div class="ha-edits">
                <div class="ha-editstitle">Textkritische Anmerkungen</div>
                <div class="ha-editsinfo">Der Brieftext wurde anhand der überlieferten Quellen (vgl. Provenienz) kritisch geprüft. Notwendige Korrekturen gegenüber dem in ZH gedruckten Text wurden vorgenommen und sind vollständig annotiert. Die in den beiden Auflagen von ZH angehängten Korrekturvorschläge werden vollständig aufgelistet, werden aber nur dann im Text realisiert, sofern diese anhand überlieferter Quellen verifiziert werden konnten.</div>
                <div class="ha-editentries">
                    <table>
                    @foreach (var edit in Model.ParsedEdits) {
                        <tr>
                            <td class="ha-editfromto">
                            <div class="ha-editfrom">@edit.Item1</div>@if (!String.IsNullOrEmpty(edit.Item2)) {<div class="ha-editto">–@edit.Item2</div>
                            }</td>
                            <td class="ha-editreference">@Html.Raw(@edit.Item3)</td>
                            <td class="ha-editreas">@Html.Raw(@edit.Item4)</td>
                        </tr>
                    }
                    </table>
                </div>
            </div>
        }
    </div>
</div>


