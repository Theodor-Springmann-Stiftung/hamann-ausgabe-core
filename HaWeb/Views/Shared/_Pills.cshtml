@model (BriefeMetaViewModel Letter, bool ShowZHData)

@if (Model.Letter.HasText) {
    @if (Model.Letter.ParsedZHString != null && Model.ShowZHData) {
        <div class="ha-tooltip">
            <div class="ha-pill pr-1.5">
                @* <svg class="inline-block mr-1" xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-book-open"><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path></svg> *@
                <svg class="mx-0.5 w-3 h-3 inline relative bottom-[0.1rem] text-slate-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path></svg>
                <span>@Html.Raw(Model.Letter.ParsedZHString)</span>
            </div>
        </div>
    }
    else if (Model.Letter.ParsedZHString == null) {
        <div class="ha-tooltip">
            <div class="ha-pill ha-newpill">
                <span>Neu</span>
            </div>
        </div>
    }

    @if (Model.Letter.Meta.hasOriginal.HasValue && Model.Letter.Meta.hasOriginal.Value == false) {
        <div class="ha-tooltip">
            <div class="ha-pill">
                <span class="ha-cross">Orig</span>
            </div>
            <div class="ha-tooltiptext">
                Original verschollen
            </div>
        </div>
    }
    else if (Model.Letter.Meta.hasOriginal.HasValue && Model.Letter.Meta.hasOriginal.Value == true) {
        <div class="ha-tooltip">
            <div class="ha-pill">
                Orig
            </div>
            <div class="ha-tooltiptext">
                Original vorhanden
            </div>
        </div>
    }

    @* @if (Model.Letter.Meta.isProofread != HaDocument.Models.OptionalBool.True) {
        <div class="ha-tooltip">
            <div class="ha-pill">
                <span class="ha-cross">geprüft</span>
            </div>
            <div class="ha-tooltiptext whitespace-nowrap">
                Noch nicht textkritisch geprüft
            </div>
        </div>
    }
    else {
        <div class="ha-tooltip">
            <div class="ha-pill">
                geprüft
            </div>
            <div class="ha-tooltiptext whitespace-nowrap">
                Textkritisch geprüft
            </div>
        </div>
    } *@

    @if (Model.Letter.Meta.ZH != null && Model.Letter.Meta.ZH.dateChanged) {
        <div class="ha-tooltip">
            <div class="ha-pill">
                neu datiert
            </div>
            <div class="ha-tooltiptext whitespace-nowrap" style="margin-left: -165px;">
                Der Brief wurde gegenüber der Ausgabe ZH neu datiert
            </div>
        </div>
    }

    @if (Model.Letter.HasMarginals) {
        <div class="ha-tooltip">
            <div class="ha-pill">
                Komm
            </div>
            <div class="ha-tooltiptext whitespace-nowrap">
                Mit Stellenkommentar
            </div>
        </div>
    }
}