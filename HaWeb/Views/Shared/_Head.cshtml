<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="description" content="@ViewData["SEODescription"]">

<title>@ViewData["Title"]</title>

<!-- crossorigin is a workaround to prevent double downloading bugs in chrome -->
<!-- also, the graphite versions of the font are available for use:
    <link rel="preload" href="/fonts/LinLibertine_R_G.ttf" as="font" crossorigin/>
    <link rel="preload" href="/fonts/LinBiolinum_R_G.ttf" as="font" crossorigin/>
-->

@* Resources *@
<link rel="preload" href="/img/subtlenet2.png" as="image" />
<link rel="preload" href="/fonts/LinBiolinum_Rah.ttf" as="font" crossorigin/>
<link rel="preload" href="/fonts/LinLibertine_Rah.ttf" as="font" crossorigin/>
<link rel="preload" href="/fonts/LinLibertine_RIah.ttf" as="font" crossorigin/>
<link rel="preload" href="/fonts/LinLibertine_RBah.ttf" as="font" crossorigin/>

@* Styles *@
<link rel="stylesheet" href="/dist/style.css" asp-append-version="true" />

<script type="module">
    import { startup_clipboard, startup_markanchor, startup_mobilemenu, startup_scrollbutton, startup_marginals, startup_theme, startup_menu } from "/dist/scripts.js";
    startup_marginals();
    startup_theme();
    startup_scrollbutton();
    startup_menu();
    startup_mobilemenu();
    startup_markanchor();
    startup_clipboard();
</script>
<script type="module">
    import "/js/mark.min.js";
    document.addEventListener("DOMContentLoaded", (event) => {
        var elements = document.querySelectorAll(".ha-register-body, .ha-searchresultpreview, .ha-commenthead, .ha-entry");
        if (elements.length < 1000) {
            var instancesearch = new Mark(elements);
            instancesearch.mark('@ViewData["Mark"]', { "element": "span", "className": "ha-found", "acrossElements": true, "separateWordSearch": false, "exclude": [".ha-searchresultcommentpill", ".ha-letlink", ".ha-letlinks", ".ha-hkb"] });
        }
        var instanceletter = new Mark(document.querySelectorAll(".ha-letterbody"));
        instanceletter.mark('@ViewData["Mark"]', { "element": "span", "className": "ha-found", "acrossElements": true, "separateWordSearch": false, "exclude": [".ha-searchresultcommentpill", ".ha-letlink", ".ha-letlinks", ".ha-hkb"] });
    });
</script>
