@model UploadViewModel;

<form class="ha-uploadform" id="uploadForm" asp-controller="API" asp-action="Upload" method="post" enctype="multipart/form-data">
    <label class="ha-uploadfilelabel" id="dropzone">
        <input class="hidden" id="file" type="file" accept=".xml" name="file" />
        <div class="ha-uploadtext">Upload</div>
        <div class="ha-lds-ellipsis" id="ha-lds-ellipsis-upload"><div></div><div></div><div></div><div></div></div>
    </label>
    <div class="ha-uploadmessage" id="ha-uploadmessage">
        Fehler!<br/>
        <output form="uploadForm" name="upload-result"></output>
    </div>
</form>

<script>
    const dropHandler = function (formelement, ev, dropzone) {
      ev.preventDefault();
      if (ev.dataTransfer.items) {
        if (ev.dataTransfer.items[0].kind === 'file') {
          var file = ev.dataTransfer.items[0].getAsFile();
          UPLOADSubmit(formelement, file);
        } else {
          var file = ev.dataTransfer.files[0];
          UPLOADSubmit(formelement, file);
        }
      }
    }

    const dragOverHandler = function (ev, dropzone) {
      ev.preventDefault();
    }

    const dragLeaveHander = function (ev, dropzone) {
      ev.preventDefault();
    }

    const dragEnterHandler = function (ev, dropzone) {
      ev.preventDefault();
    }

    const UPLOADSubmit = async function (oFormElement, file = null) {
      var fd = new FormData();
      if (file !== null) fd.append("file", file);
      else fd = new FormData(oFormElement);
      document.getElementById("dropzone").style.pointerEvents = "none";
      document.getElementById("ha-lds-ellipsis-upload").style.display = "inline-block";
      document.getElementById("ha-uploadmessage").style.opacity = "0";
      await fetch(oFormElement.action, {
          method: 'POST',
          headers: {
            'RequestVerificationToken': getCookie('RequestVerificationToken')
          },
          body: fd
        })
        .then(response => response.json())
        .then(json => {
          if ("Error" in json) {
            document.getElementById("dropzone").style.pointerEvents = "auto";
            document.getElementById("ha-lds-ellipsis-upload").style.display = "none";
            document.getElementById("ha-uploadmessage").style.opacity = "1";
            oFormElement.elements.namedItem("upload-result").value = json.Error;
          } else {
            document.getElementById("dropzone").style.pointerEvents = "auto";
            document.getElementById("ha-lds-ellipsis-upload").style.display = "none";
            oFormElement.elements.namedItem("upload-result").value = "Erfolg!";
            if ("Prefix" in json[0]) {
              document.getElementById("dropzone").style.pointerEvents = "auto";
              document.getElementById("ha-lds-ellipsis-upload").style.display = "none";
              window.location.replace("/Admin/Upload/" + json[0].Prefix);
            }
          }
        })
        .catch ((e) => { 
          document.getElementById("dropzone").style.pointerEvents = "auto";
          document.getElementById("ha-lds-ellipsis-upload").style.display = "none";
          document.getElementById("ha-uploadmessage").style.opacity = "1";
          oFormElement.elements.namedItem("upload-result").value = "Keine Antwort. Bitte Seite neu laden!";
        })
    }

    window.addEventListener("load", () => {
        var submitelement = document.getElementById("file");
        var formelement = document.getElementById("uploadForm");
        var dropzone = document.getElementById("dropzone");
        submitelement.addEventListener("change", () => UPLOADSubmit(formelement));
        dropzone.addEventListener("drop", (ev) => dropHandler(formelement, ev, dropzone));
        dropzone.addEventListener("dragover", (ev) => dragOverHandler(ev, dropzone));
        dropzone.addEventListener("dragleave", (ev) => dragLeaveHander(ev, dropzone));
        dropzone.addEventListener("dragenter", (ev) => dragEnterHandler(ev, dropzone));
    });
</script>