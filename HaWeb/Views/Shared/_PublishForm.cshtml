@model UploadViewModel;
@if (Model.UsedFiles != null && Model.UsedFiles.Any()) {
      <div class="ha-publishfilelisttitle">Aktuell geladene Dateien</div>
        <table class="ha-publishfilelistlist">
        @foreach (var (category, files) in Model.UsedFiles.OrderBy(x => x.Key))
        {
          <tr>
            <td>@Model.AvailableRoots.Where(x => x.Prefix == category).First().Type:</td>
            <td>
            @foreach (var item in files)
            {
              if (item != files.Last()) {
                <span>@item.FileName,</span>
              }
              else {
                <span>@item.FileName</span>
              }
            }
            </td>
          </tr>
        }
        </table>

        <form class="ha-publishform" id="ha-publishform" asp-controller="API" asp-action="LocalPublish" method="post" enctype="multipart/form-data">
          <label class="ha-publishfilelabel" id="ha-publishfilelabel">
            <div class="ha-publishtext">Dateien Ver√∂ffentlichen</div>
            <div class="ha-lds-ellipsis" id="ha-lds-ellipsis-publish"><div></div><div></div><div></div><div></div></div>
          </label>
          <div class="ha-publishmessage" id="ha-publishmessage">
            @* Fehler!<br/> *@
            <output form="uploadForm" name="publish-result" id="publish-result"></output>
          </div>
      </form>
}

<script>
    const LOCALPUBLISHSubmit = async function (oFormElement) {
      var fd = new FormData();
      document.getElementById("ha-publishfilelabel").style.pointerEvents = "none";
      document.getElementById("ha-lds-ellipsis-publish").style.display = "inline-block";
      document.getElementById("ha-publishmessage").style.opacity = "0";
      await fetch(oFormElement.action, {
          method: 'POST',
          headers: {
            'RequestVerificationToken': getCookie('RequestVerificationToken')
          }
        })
        .then(response => response.json())
        .then(json => {
          if ("Error" in json) {
            document.getElementById("ha-publishfilelabel").style.pointerEvents = "auto";
            document.getElementById("ha-lds-ellipsis-publish").style.display = "none";
            document.getElementById("ha-publishmessage").style.opacity = "1";
            document.getElementById("publish-result").value = json.Error;
          } else {
            document.getElementById("ha-publishfilelabel").style.pointerEvents = "auto";
            document.getElementById("ha-lds-ellipsis-publish").style.display = "none";
            document.getElementById("ha-publishmessage").style.opacity = "1";
            document.getElementById("publish-result").value = "Erfolg!";
            location.reload();
          }
        })
        .catch ((e) => {
          document.getElementById("ha-publishfilelabel").style.pointerEvents = "auto";
          document.getElementById("ha-lds-ellipsis-publish").style.display = "none";
          document.getElementById("publish-result").value = "Keine Antwort. Bitte Seite neu laden!";
      })
    }

    window.addEventListener("load", () => {
        var publishelement = document.getElementById("ha-publishform");
        var publishbutton = document.getElementById("ha-publishfilelabel");
        publishbutton.addEventListener("click", () => LOCALPUBLISHSubmit(publishelement));
    })
    
</script>